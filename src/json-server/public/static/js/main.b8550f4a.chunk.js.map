{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/Forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","onClick","Card","to","id","CardImg","width","object","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","menu","dishes","map","key","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","RenderDish","in","transformProps","exitTransform","CardBody","CardText","description","RenderComments","comments","postComment","dishId","comment","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","CommentForm","state","isModalOpen","toggleModal","bind","handleSubmit","this","setState","values","rating","message","Modal","isOpen","toggle","ModalHeader","ModalBody","onSubmit","Row","Col","md","Label","htmlFor","select","model","text","placeholder","validators","minLength","show","messages","textarea","rows","Button","type","value","color","outline","Component","DishDetail","Header","isNavOpen","toggleNav","handleLogin","event","alert","username","password","remember","checked","preventDefault","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","navbar","Nav","NavItem","Jumbotron","Form","FormGroup","Input","innerRef","input","check","Footer","RenderCard","item","clt","designation","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","JSON","stringify","resetFeedbackForm","role","size","offset","checkbox","RenderLeader","Media","body","heading","About","leaders","CardHeader","title","list","dishesFailed","error","payload","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","addLeaders","leadersFailed","Main","fetchDishes","fetchPromos","fetchComments","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","Error","status","statusText","json","addComment","catch","console","log","newFeedback","feedback","actions","reset","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","App","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b8550f4a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return (  \r\n        <div className = \"col-12\">\r\n            <span className = \"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n}\r\n","export const baseUrl = 'http://localhost:3001/';"," import React from 'react';\r\n import {Card,CardImg,CardImgOverlay,CardTitle, Breadcrumb,BreadcrumbItem} from 'reactstrap';\r\n import {Link} from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n function RenderMenuItem({dish,onClick}){\r\n     return ( \r\n        <Card >\r\n            <Link to={`/menu/${dish.id}`}>\r\n                <CardImg width=\"100%\" object src={baseUrl + dish.image} alt={dish.name}/>\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n     );\r\n }\r\n const Menu = props => {\r\n        const menu = props.dishes.dishes.map((dish)=>{\r\n            return (\r\n                <div key={dish.id} className=\"col-12 col-md-5 m-1\">\r\n                    <RenderMenuItem dish={dish}/>\r\n                </div>\r\n            )\r\n        });\r\n        if (props.dishes.isLoading) {\r\n            return (\r\n                <div className = \"container\">\r\n                    <div className = \"row\">\r\n                        <Loading />\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(props.dishes.errMess) {\r\n            return (\r\n                <div className = \"container\">\r\n                    <div className = \"row\">\r\n                        <h4>{ props.dishes.errMess }</h4>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                        <div className=\"col-12\">\r\n                            <h3>Menu</h3>\r\n                            <hr />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                            {menu}\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n}\r\n export default Menu;","import React, { Component } from 'react';\r\nimport { Card, CardBody, CardTitle, CardImg, CardText, BreadcrumbItem, Breadcrumb } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, Button, Modal, ModalHeader, ModalBody, Label } from 'reactstrap';\r\nimport { Control, Errors, LocalForm } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport {baseUrl} from '../shared/baseUrl';\r\nimport {FadeTransform , Fade , Stagger} from 'react-animation-components'\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\n\r\n\r\nfunction RenderDish({ dish }) {\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <FadeTransform in transformProps = {{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n                <Card>\r\n                    <CardImg width=\"100%\" object src={baseUrl + dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        </div>\r\n    )\r\n}\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n    const comment = comments.map((comment) => {\r\n        return (\r\n            <li key={comment.id}>\r\n                <p>{comment.comment}</p>\r\n                <p>--{comment.author}, {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit' }).format(new Date(Date.parse(comment.date)))}</p>\r\n            </li>\r\n        )\r\n    })\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n            <h4>Comments</h4>\r\n            <ul className=\"list-unstyled\">\r\n                <Stagger in>\r\n                    <Fade in>\r\n                        {comment}\r\n                    </Fade>\r\n                </Stagger>\r\n            </ul>\r\n            <CommentForm dishId={dishId} postComment={postComment} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className = \"container\">\r\n                <div className = \"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if(props.errMess) {\r\n        return (\r\n            <div className = \"container\">\r\n                <div className = \"row\">\r\n                    <h4>{ props.errMess }</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else if (props.dish != null) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments comments={props.comments}\r\n                        postComment={props.postComment}\r\n                        dishId={props.dish.id} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div></div>\r\n        )\r\n    }\r\n\r\n}\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isModalOpen: false\r\n        }\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n    handleSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.name, values.message);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12}>\r\n                                    <Label htmlFor=\"rating\">Rating</Label>\r\n                                    <Control.select model=\".rating\" name=\"Rating\"\r\n                                        className=\"form-control\">\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col>\r\n                                    <Label htmlFor=\"name\">Your Name</Label>\r\n                                    <Control.text model=\".name\" name=\"name\" id=\"name\" placeholder=\"Your Name\" className=\"form-control\" validators={{\r\n                                        required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                    }} />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".name\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={12}>\r\n                                    <Label htmlFor=\"message\">Comment</Label>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"6\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n                <div>\r\n                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil\"></span> Submit Comment</Button>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default DishDetail;\r\n","import React, {Component} from 'react';\r\nimport { Modal,ModalBody,ModalHeader,Button,Navbar, NavbarBrand, Jumbotron,Nav,NavbarToggler,Collapse,NavItem, FormGroup, Label, Input,Form } from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\nclass Header extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        }\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen:!this.state.isNavOpen\r\n        })    \r\n    }\r\n    toggleModal() {\r\n        this.setState({\r\n          isModalOpen: !this.state.isModalOpen\r\n        });\r\n      }\r\n      handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n        + \" Remember: \" + this.remember.checked);\r\n    event.preventDefault();\r\n      }\r\n    render() {\r\n        return(\r\n            <>\r\n                <Navbar dark expand=\"md\">\r\n                    <div className=\"container\">\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                     <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n                        <img src=\"assets/images/logo.png\" height=\"30\" width=\"41\" alt=\"Ristorante Con Fusion\"/>\r\n                    </NavbarBrand>\r\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                        <Nav navbar>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/home\">\r\n                                    <span className=\"fa fa-home fa-lg\"></span> Home\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                                    <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/menu\">\r\n                                    <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                                </NavLink>\r\n                            </NavItem>\r\n                            <NavItem>\r\n                                <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                                    <span className=\"fa fa-address-card fa-lg\"></span> Contact Us\r\n                                </NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                        <Nav className=\"ml-auto\" navbar>\r\n                            <NavItem>\r\n                                <Button outline onClick={this.toggleModal}>\r\n                                    <span className=\"fa fa-sign-in fa-lg\"> Login</span>\r\n                                </Button>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1>Ristorante Con Fusion</h1>\r\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"username\">Username</Label>\r\n                                <Input type=\"text\" id=\"username\" name=\"username\"\r\n                                    innerRef={(input) => this.username = input} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor=\"password\">Password</Label>\r\n                                <Input type=\"password\" id=\"password\" name=\"password\"\r\n                                    innerRef={(input) => this.password = input}  />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type=\"checkbox\" name=\"remember\"\r\n                                    innerRef={(input) => this.remember = input}  />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to = \"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({item , isLoading , errMess}) {\r\n    if(isLoading) {\r\n        return (\r\n            <Loading />\r\n        );\r\n    }\r\n    else if (errMess) {\r\n        return (\r\n            <h4>{ errMess }</h4>\r\n        );\r\n    }\r\n    else {\r\n        return(\r\n            <FadeTransform in transformProps = {{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} clt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle>:null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }   \r\n}\r\n\r\nfunction Home(props) {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row align-items-start\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish} \r\n                        isLoading = {props.dishesLoading}\r\n                        errMess = {props.dishesErrMess}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion}\r\n                        isLoading = {props.promosLoading}\r\n                        errMess = {props.promosErrMess}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader}\r\n                        isLoading = {props.leadersLoading}\r\n                        errMess = {props.leadersErrMess}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Row, Breadcrumb, BreadcrumbItem, Button, Label, Col } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        //console.log('Current State is: ' + JSON.stringify(values));\r\n        this.props.postFeedback(JSON.stringify(values));\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12\">\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\" href=\"https://skype.com\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                        <h3>Send us your Feedback</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                        <Form model = 'feedback' onSubmit={(values) => this.handleSubmit(values)}>\r\n                        <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                        />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                            /> {' '}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model=\".contactType\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Contact;","import React from 'react';\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\nimport { Fade , Stagger } from 'react-animation-components';\nimport { Loading } from './LoadingComponent';\nfunction RenderLeader({leader}){\n    return(\n        <Media className=\"mb-5\">\n            <Media className=\"mr-5\" object src={baseUrl + leader.image} alt={leader.name} />\n            <Media body>\n                <Media heading>\n                    {leader.name}\n                </Media>\n                <p>{leader.designation}</p>\n                <p>{leader.description}</p>\n            </Media>\n        </Media>\n    )\n}\n\nfunction About(props) {\n    \n    const leaders = props.leaders.map((leader) => {\n        return (\n            <RenderLeader key={leader.id} leader={leader} />\n        );\n    });\n\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <Media list>\n                        <Stagger in>\n                            <Fade in>\n                                {props.isLoading ? <Loading/> : props.errMess ? <h4>{props.errMess}</h4> : leaders}\n                            </Fade>\n                        </Stagger>\n                    </Media>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import * as ActionTypes from './ActionTypes';\r\nimport {baseUrl} from '../shared/baseUrl';\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    payload:comment\r\n});\r\n\r\nexport const postFeedback = (newFeedback) => (dispatch) => {\r\n    return fetch(baseUrl + 'feedback', {\r\n        method : \"POST\",\r\n        body : newFeedback,\r\n        headers : {\r\n            \"Content-Type\" : 'application/json'\r\n        },\r\n        credentials : \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if(response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            let error = new Error(\"Error: \" + response.status + \" \" + response.statusText);\r\n            error.response = error;\r\n            throw error;\r\n        }\r\n    },\r\n    error => {\r\n        throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(feedback => alert(\"Thank you for your feedback!\\n\" + JSON.stringify(feedback)))\r\n    .catch(error => console.log(error.message));\r\n}\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    }\r\n    newComment.date = new Date().toISOString();\r\n    return fetch(baseUrl + 'comments', {\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers : {\r\n            \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n        if(response.ok) {\r\n            return response;\r\n        }\r\n        else {\r\n            let error = new Error('Error: ' + response.status + ' ' + response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    },\r\n    error =>{\r\n        throw error;\r\n    })\r\n    .then(response => response.json())\r\n    .then(response => dispatch(addComment(response)))\r\n    .catch(error => console.log(error.message))\r\n}\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(response => {\r\n            if(response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                let error = new Error('Error ' + response.status + ' ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            let errmess = new Error(error.message);\r\n            throw errmess; //if unable to communicate to server\r\n        })\r\n        .then(response => response.json())\r\n        .then(dishes => dispatch(addDishes(dishes)))\r\n        .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\nexport const dishesLoading = () => ({\r\n    type : ActionTypes.DISHES_LOADING\r\n});\r\n\r\nexport const dishesFailed = (error) => ({\r\n    type : ActionTypes.DISHES_FAILED,\r\n    payload : error\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n    type : ActionTypes.ADD_DISHES,\r\n    payload : dishes\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    return fetch(baseUrl + 'comments')\r\n        .then(response => {\r\n            if(response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                let error = new Error('Error ' + response.status + ' ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            let errmess = new Error(error.message);\r\n            throw errmess; //if unable to communicate to server\r\n        })\r\n        .then(response => response.json())\r\n        .then(comments => dispatch(addComments(comments)))\r\n        .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\nexport const commentsFailed = (error) => ({\r\n    type : ActionTypes.COMMENTS_FAILED,\r\n    payload : error\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n    type : ActionTypes.ADD_COMMENTS,\r\n    payload : comments\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(response => {\r\n            if(response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                let error = new Error('Error ' + response.status + ' ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        error => {\r\n            let errmess = new Error(error.message);\r\n            throw errmess; //if unable to communicate to server\r\n        })\r\n        .then(response => response.json())\r\n        .then(promos => dispatch(addPromos(promos)))\r\n        .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\nexport const promosLoading = () => ({\r\n    type : ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (error) => ({\r\n    type : ActionTypes.PROMOS_FAILED,\r\n    payload : error\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type : ActionTypes.ADD_PROMOS,\r\n    payload : promos\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading());\r\n    return fetch(baseUrl + 'leaders')\r\n        .then((response) => {\r\n            if(response.ok) {\r\n                return response;\r\n            }\r\n            else {\r\n                let error = new Error(\"Error: \" + response.status + \" \" + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        },\r\n        (error) => {\r\n            throw error;\r\n        })\r\n        .then(response => response.json())\r\n        .then(leaders => dispatch(addLeaders(leaders)))\r\n        .catch(error => dispatch(leadersFailed(error.message))); \r\n}\r\n\r\nexport const leadersLoading = () => ({\r\n    type : ActionTypes.LEADERS_LOADING\r\n})\r\n\r\nexport const addLeaders = (leaders) => ({\r\n    type : ActionTypes.ADD_LEADERS,\r\n    payload : leaders\r\n})\r\n\r\nexport const leadersFailed = (error) => ({\r\n    type : ActionTypes.LEADERS_FAILED,\r\n    payload : error\r\n})","export const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED'; \r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED'; \r\nexport const PROMOS_LOADING ='PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';","import React, { Component } from 'react';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport Home from './HomeComponent';\r\nimport Contact from './ContactComponent';\r\nimport About from './AboutComponent';\r\nimport { connect } from 'react-redux';\r\nimport { postComment, fetchComments, fetchDishes, fetchPromos, fetchLeaders, postFeedback } from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup , CSSTransition } from 'react-transition-group';\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n  postFeedback : (newFeedback) => dispatch(postFeedback(newFeedback)),\r\n  fetchDishes : () => dispatch(fetchDishes()),\r\n  resetFeedbackForm: () => dispatch(actions.reset('feedback')),\r\n  fetchPromos : () => dispatch(fetchPromos()),\r\n  fetchComments : () => dispatch(fetchComments()),\r\n  fetchLeaders : () => dispatch(fetchLeaders())\r\n});\r\n\r\nclass Main extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchPromos();\r\n    this.props.fetchComments();\r\n    this.props.fetchLeaders();\r\n  }\r\n  render() {\r\n    const HomePage = () => {\r\n      return (\r\n        <Home dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading = {this.props.dishes.isLoading}\r\n          dishesErrMess = {this.props.dishes.errMess}\r\n          promotion = {this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\r\n          promosLoading = {this.props.promotions.isLoading}\r\n          promosErrMess = {this.props.promotions.errMess}\r\n          leader = {this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n          leadersLoading = {this.props.leaders.isLoading}\r\n          leadersErrMess = {this.props.leaders.errMess}\r\n        />\r\n      )\r\n    }\r\n    const DishWithId = ({ match }) => {\r\n      return (\r\n        <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n          isLoading = {this.props.dishes.isLoading}\r\n          errMess = {this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n          commentsErrMess = {this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n        />\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition key = {this.props.location.key} classNames = \"page\" timeout ={300} >\r\n            <Switch>\r\n              <Route path=\"/home\" component={HomePage} />\r\n              <Route exact path='/contactus' component={() => \r\n                <Contact resetFeedbackForm = { this.props.resetFeedbackForm }\r\n                  postFeedback = { this.props.postFeedback } />} />\r\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n              <Route exact path=\"/aboutus\" component={() =>\r\n                <About leaders={this.props.leaders.leaders}\r\n                  isLoading = {this.props.leaders.isLoading}\r\n                  errMess = {this.props.leaders.errMess} \r\n                />}\r\n              />\r\n              <Route exact path=\"/menu\" component={() => <Menu dishes={this.props.dishes} />} />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n\r\n\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (state = {\r\n        isLoading : true,\r\n        errMess: null,\r\n        dishes: []\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return {\r\n                isLoading : false,\r\n                dishes : action.payload,\r\n                errMess : null\r\n            }\r\n        case ActionTypes.DISHES_LOADING:\r\n            return {\r\n                isLoading : true,\r\n                dishes : [],\r\n                errMess : null\r\n            }\r\n        case ActionTypes.DISHES_FAILED:\r\n            return {\r\n                isLoading : false,\r\n                dishes : [],\r\n                errMess : action.payload\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (state = {\r\n        errMess: null,\r\n        comments: []\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS :\r\n            return {\r\n                ...state,\r\n                errMess : '',\r\n                comments : action.payload\r\n            }\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return {\r\n                ...state,\r\n                errMess : action.payload,\r\n                comments : []\r\n            }\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n            return {\r\n                ...state,\r\n                errMess : '',\r\n                comments : state.comments.concat(comment)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state = {\r\n        isLoading : true,\r\n        promotions : [],\r\n        errMess : ''\r\n    }, action) => {\r\n    switch(action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return {\r\n                isLoading : false,\r\n                promotions : action.payload,\r\n                errMess : null\r\n            }\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {\r\n                isLoading : true,\r\n                promotions : [],\r\n                errMess : null\r\n            }\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {\r\n                isLoading : false,\r\n                promotions : [],\r\n                errMess : action.payload\r\n            }\r\n        default :\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (state = {\r\n        isLoading : true,\r\n        leaders : [],\r\n        errMess : null\r\n    }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS :\r\n            return {\r\n                isLoading : false,\r\n                leaders : action.payload,\r\n                errMess : null\r\n            }\r\n        case ActionTypes.LEADERS_FAILED :\r\n            return {\r\n                isLoading : false,\r\n                leaders : [],\r\n                errMess : action.payload\r\n            }\r\n        case ActionTypes.LEADERS_LOADING :\r\n            return {\r\n                ...state,\r\n                isLoading : true\r\n            }         \r\n        default:\r\n            return state;\r\n    }\r\n}","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n}","import React ,{Component} from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore';\n\n\nclass App extends Component {\n\n  render(){\n    const store = ConfigureStore();\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n            <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  } \n}\n\nexport default App;\n  \n\n","import { createStore, combineReducers , applyMiddleware } from 'redux';\r\nimport { createForms } from 'react-redux-form';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport { InitialFeedback } from './Forms';\r\n\r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            ...createForms({\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        applyMiddleware(thunk,logger)\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}